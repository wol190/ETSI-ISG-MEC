swagger: '2.0'
info:
  title: Mp1 API
  version: 1.1.1
  description: The ETSI MEC ISG MEC016 UE Application Interface API described using OpenAPI
  license:
    name: ETSI Forge copyright notice
    url: 'https://forge.etsi.org/etsi-forge-copyright-notice.txt'
externalDocs:
  description: ETSI GS MEC011 Application Enablement API, V1.1.1
  url: 'http://www.etsi.org/deliver/etsi_gs/MEC/001_099/011/01.01.01_60/gs_mec011v010101p.pdf'
host: '127.0.0.1:8081'
basePath: /exampleAPI/mp1/v1/
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
parameters:
  Body.AppTerminationNotificationSubscription:
    name: AppTerminationNotificationSubscription
    description: Entity body in the request contains a subscription to the mobile edge application termination notifications that is to be created.
    in: body
    required: true
    schema:
      $ref: '#/definitions/AppTerminationNotificationSubscription.Request'
  Body.DnsRule:
    name: DnsRule
    description: The updated ÔÇ£stateÔÇØ is included in the entity body of the request.
    in: body
    required: true
    schema:
      $ref: '#/definitions/DnsRule'
  Body.SerAvailabilityNotificationSubscription:
    name: SerAvailabilityNotificationSubscription
    description: Entity body in the request contains a subscription to the mobile edge service availability notifications that is to be created.
    in: body
    required: true
    schema:
      $ref: '#/definitions/SerAvailabilityNotificationSubscription.Request'
  Body.ServiceInfo:
    name: ServiceInfo
    description: New ServiceInfo with updated "state" is included as entity body of the request
    in: body
    required: true
    schema:
      $ref: '#/definitions/ServiceInfo'
  Body.TrafficRule:
    name: TrafficRule
    description: One or more updated attributes that are allowed to be changed
    in: body
    required: true
    schema:
      $ref: '#/definitions/TrafficRule'
  Path.AppInstanceId:
    name: appInstanceId
    description: Represents a mobile edge application instance. Note that the appInstanceId is allocated by the mobile edge platform manager.
    in: path
    required: true
    type: string
    format: uri
  Path.DnsRuleId:
    name: dnsRuleId
    description: Represents a DNS rule.
    in: path
    required: true
    type: string
    format: uri
  Path.SubscriptionId:
    name: subscriptionId
    description: Represents a subscription to the notifications from the mobile edge platform.
    in: path
    required: true
    type: string
    format: uri
  Path.SubscriptionType:
    name: subscriptionType
    description: Represents a subscription type to the notifications from the mobile edge platform.
    in: path
    required: true
    type: string
    format: uri
  Path.ServiceId:
    name: serviceId
    description: Represents a mobile edge service instance.
    in: path
    required: true
    type: string
    format: uri
  Path.TrafficRuleId:
    name: trafficRuleId
    description: Represents a traffic rule.
    in: path
    required: true
    type: string
    format: uri
  Query.Ser_category_id:
    name: ser_category_id
    description: A mobile edge application instance may use ser_category_id as an input parameter to query the availability of a list of mobile edge service instances in a serCategory. Either "ser_instance_id" or "ser_name" or "ser_category_id" or none of them shall be present.
    in: query
    required: false
    type: string
  Query.Ser_instance_id:
    name: ser_instance_id
    description: A mobile edge application instance may use multiple ser_instance_ids as an input parameter to query the availability of a list of mobile edge service instances. Either "ser_instance_id" or "ser_name" or "ser_category_id" or none of them shall be present.
    in: query
    required: false
    type: array
    items:
      type: string
  Query.Ser_name:
    name: ser_name
    description: A mobile edge application instance may use multiple ser_names as an input parameter to query the availability of a list of mobile edge service instances. Either "ser_instance_id" or "ser_name" or "ser_category_id" or none of them shall be present.
    in: query
    required: false
    type: array
    items:
      type: string
paths:
  '/applications/{appInstanceId}/dns_rules':
    get:
      description: This method retrieves information about all the DNS rules associated with a mobile edge application instance.
      operationId: ApplicationsDnsRules.GET
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/Path.AppInstanceId'
      responses:
        '200':
          description: It is used to indicate nonspecific success. The response body contains a representation of the resource.
          schema:
            type: array
            items:
              type: object
              properties:
                DnsRule:
                  $ref: '#/definitions/DnsRule'
  '/applications/{appInstanceId}/dns_rules/{dnsRuleId}':
    get:
      description: This method retrieves information about a DNS rule associated with a mobile edge application instance.
      operationId: ApplicationsDnsRule.GET
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/Path.AppInstanceId'
        - $ref: '#/parameters/Path.DnsRuleId'
      responses:
        '200':
          description: It is used to indicate nonspecific success. The response body contains a representation of the resource.
          schema:
            type: object
            properties:
              DnsRule:
                $ref: '#/definitions/DnsRule'
    put:
      description: 'This method activates, de-activates or updates a traffic rule.'
      operationId: ApplicationsDnsRule.PUT
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/Body.DnsRule'
        - $ref: '#/parameters/Path.AppInstanceId'
        - $ref: '#/parameters/Path.DnsRuleId'
      responses:
        '200':
          description: It is used to indicate nonspecific success. The response body contains a representation of the resource.
          schema:
            type: object
            properties:
              DnsRule:
                $ref: '#/definitions/DnsRule'
  '/applications/{appInstanceId}/subscriptions':
    get:
      description: 'The GET method may be used to request information about all subscriptions for this requestor. Upon success, the response contains entity body with all the subscriptions for the requestor.'
      operationId: ApplicationsSubscriptions.GET
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/Path.AppInstanceId'
      responses:
        '200':
          description: 'Upon success, a response body containing the list of links to the requested subscriptions is returned.'
          schema:
            type: object
            properties:
              Mp1SubscriptionLinkList:
                $ref: '#/definitions/Mp1SubscriptionLinkList'
    post:
      description: 'The POST method may be used to create a new subscription. One example use case is to create a new subscription to the mobile edge service availability notifications. Upon success, the response contains entity body describing the created subscription.'
      operationId: ApplicationsSubscriptions.POST
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/Path.AppInstanceId'
        - $ref: '#/parameters/Body.AppTerminationNotificationSubscription'
      responses:
        '200':
          description: Entity body in the request contains a subscription to the mobile edge service availability notifications that is to be created.
          schema:
            type: object
            properties:
              AppTerminationNotificationSubscription:
                $ref: '#/definitions/AppTerminationNotificationSubscription.Response'
  '/applications/{appInstanceId}/subscriptions/{subscriptionType}/{subscriptionId}':
    get:
      description: 'The GET method requests information about a subscription for this requestor. Upon success, the response contains entity body with the subscription for the requestor.'
      operationId: ApplicationsSubscription.GET
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/Path.AppInstanceId'
        - $ref: '#/parameters/Path.SubscriptionType'
        - $ref: '#/parameters/Path.SubscriptionId'
      responses:
        '200':
          description: 'Upon success, a response body containing the requested subscription is returned.'
          schema:
            type: object
            properties:
              SerAvailabilityNotificationSubscription:
                $ref: '#/definitions/SerAvailabilityNotificationSubscription.Response'
    delete:
      description: This method deletes a meMp1Subscription. This method is typically used in "Unsubscribing from service availability event notifications" procedure.
      operationId: ApplicationsSubscription.DELETE
      produces:
        - application/json
      responses:
        '204':
          description: No Content
  '/applications/{appInstanceId}/traffic_rules':
    get:
      description: This method retrieves information about all the traffic rules associated with a mobile edge application instance.
      operationId: ApplicationsTrafficRules.GET
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/Path.AppInstanceId'
      responses:
        '200':
          description: It is used to indicate nonspecific success. The response body contains a representation of the resource.
          schema:
            type: array
            items:
              type: object
              properties:
                TrafficRule:
                  $ref: '#/definitions/TrafficRule'
  '/applications/{appInstanceId}/traffic_rules/{trafficRuleId}':
    get:
      description: This method retrieves information about all the traffic rules associated with a mobile edge application instance.
      operationId: ApplicationsTrafficRule.GET
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/Path.AppInstanceId'
        - $ref: '#/parameters/Path.TrafficRuleId'
      responses:
        '200':
          description: It is used to indicate nonspecific success. The response body contains a representation of the resource.
          schema:
            type: object
            properties:
              TrafficRule:
                $ref: '#/definitions/TrafficRule'
    put:
      description: This method retrieves information about all the traffic rules associated with a mobile edge application instance.
      operationId: ApplicationsTrafficRules.PUT
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/Body.TrafficRule'
        - $ref: '#/parameters/Path.AppInstanceId'
        - $ref: '#/parameters/Path.TrafficRuleId'
      responses:
        '200':
          description: 'Upon success, a response body containing data type describing the updated TrafficRule is returned.'
          schema:
            type: object
            properties:
              TrafficRule:
                $ref: '#/definitions/TrafficRule'
  /services:
    get:
      description: This method retrieves information about a list of meService resources. This method is typically used in "service availability query" procedure
      operationId: Services.GET
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/Query.Ser_instance_id'
        - $ref: '#/parameters/Query.Ser_name'
        - $ref: '#/parameters/Query.Ser_category_id'
      responses:
        '200':
          description: It is used to indicate nonspecific success. The response body contains a representation of the resource.
          schema:
            type: array
            items:
              type: object
              properties:
                ServiceInfo:
                  $ref: '#/definitions/ServiceInfo'
    put:
      description: This method is used to create a meService resource. This method is typically used in "service availability update and new service registration" procedure
      operationId: Services.POST
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/Body.ServiceInfo'
      responses:
        '201':
          description: 'Upon success, the HTTP response shall include a Location HTTP header that contains the resource URI of the created resource.'
          schema:
            type: object
            properties:
              ServiceInfo:
                $ref: '#/definitions/ServiceInfo'
  '/services/{serviceId}':
    get:
      description: This method retrieves information about a meService resource. This method is typically used in "service availability query" procedure
      operationId: ServicesServiceId.GET
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/Path.ServiceId'
      responses:
        '200':
          description: It is used to indicate nonspecific success. The response body contains a representation of the resource.
          schema:
            type: object
            properties:
              ServiceInfo:
                $ref: '#/definitions/ServiceInfo'
          examples:
            application/json:
              ServiceInfo:
                serInstanceId: ServiceInstance123
                serName: ExampleService
                serCategory:
                  href: catItem1
                  id: id12345
                  name: RNI
                  version: version1
                version: ServiceVersion1
                state: ACTIVE
                transportId: Rest1
                transportInfo:
                  id: TransId12345
                  name: REST
                  description: REST API
                  type: JSON
                  protocol: HTTP
                  version: '2.0'
                  endpoint:
                    uris:
                      - /meMp1/service/EntryPoint
                    addresses:
                      - host: 192.0.2.0
                        port: '8080'
                  mp1.security:
                    oAuth2Info:
                      grantTypes: OAUTH2_CLIENT_CREDENTIALS
                      tokenEndpoint: /meMp1/mp1.security/TokenEndPoint
                serializer: JSON
    put:
      description: This method updates the information about a meService resource
      operationId: ServicesServiceId.PUT
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/Path.ServiceId'
        - $ref: '#/parameters/Body.ServiceInfo'
      responses:
        '200':
          description: 'Upon success, a response body containing data type describing the updated ServiceInfo is returned'
          schema:
            type: object
            properties:
              ServiceInfo:
                $ref: '#/definitions/ServiceInfo'
          examples:
            application/json:
              ServiceInfo:
                serInstanceId: ServiceInstance123
                serName: ExampleService
                serCategory:
                  href: catItem1
                  id: id12345
                  name: RNI
                  version: version1
                version: ServiceVersion1
                state: ACTIVE
                transportId: Rest1
                transportInfo:
                  id: TransId12345
                  name: REST
                  description: REST API
                  type: JSON
                  protocol: HTTP
                  version: '2.0'
                  endpoint:
                    uris:
                      - /meMp1/service/EntryPoint
                    addresses:
                      - host: 192.0.2.0
                        port: '8080'
                  mp1.security:
                    oAuth2Info:
                      grantTypes: OAUTH2_CLIENT_CREDENTIALS
                      tokenEndpoint: /meMp1/mp1.security/TokenEndPoint
                serializer: JSON
  /timing/current_time:
    get:
      description: This method retrieves the information of the platform's current time which corresponds to the get platform time procedure
      operationId: TimingCurrentTime.GET
      produces:
        - application/json
      responses:
        '200':
          description: It is used to indicate nonspecific success. The response body contains a representation of the resource.
          schema:
            type: object
            properties:
              CurrentTime:
                $ref: '#/definitions/CurrentTime'
  /timing/timing_caps:
    get:
      description: This method retrieves the information of the platform's timing capabilities which corresponds to the timing capabilities query
      operationId: TimingCaps.GET
      produces:
        - application/json
      responses:
        '200':
          description: It is used to indicate nonspecific success. The response body contains a representation of the resource.
          schema:
            type: object
            properties:
              TimingCaps:
                $ref: '#/definitions/TimingCaps'
  /transports:
    get:
      description: This method retrieves information about a list of available transports. This method is typically used by a service-producing application to discover transports provided by the mobile edge platform in the "transport information query" procedure
      operationId: Transports.GET
      produces:
        - application/json
      responses:
        '200':
          description: It is used to indicate nonspecific success. The response body contains a representation of the resource.
          schema:
            type: array
            items:
              type: object
              properties:
                TransportInfo:
                  $ref: '#/definitions/TransportInfo'
definitions:
  AppTerminationNotification.MaxGracefulTimeout:
    description: Maximum timeout value in seconds for graceful termination or graceful stop of an application instance.
    type: string
    format: uint32
    example: 10
  AppTerminationNotification.NotificationType:
    description: Shall be set to AppTerminationNotification.
    type: string
    example: AppTerminationNotification
  AppTerminationNotification:
    description: This type represents the information that the mobile edge platform notifies the subscribed application instance about  the corresponding application instance termination/stop.
    type: object
    required:
      - notificationType
      - maxGracefulTimeout
      - _links
    properties:
      notificationType:
        $ref: '#/definitions/AppTerminationNotification.NotificationType'
      maxGracefulTimeout:
        $ref: '#/definitions/AppTerminationNotification.MaxGracefulTimeout'
      _links:
        $ref: '#/definitions/Subscription'
  AppTerminationNotificationSubscription.AppInstanceId:
    description: It is used as the filtering criterion for the subscribed events.
    type: string
    example: ID1
  AppTerminationNotificationSubscription.CallbackReference:
    description: URI selected by the mobile edge application instance to receive notifications on the subscribed mobile edge application instance management information. This shall be included in both the request and the response.
    type: string
    format: uri
  AppTerminationNotificationSubscription.Request:
    description: This type represents the information that the mobile edge platform notifies the subscribed application instance about  the corresponding application instance termination/stop.
    type: object
    required:
      - subscriptionType
      - callbackReference
      - appInstanceId
    properties:
      subscriptionType:
        $ref: '#/definitions/AppTerminationNotificationSubscription.SubscriptionType'
      callbackReference:
        $ref: '#/definitions/AppTerminationNotificationSubscription.CallbackReference'
      appInstanceId:
        $ref: '#/definitions/AppTerminationNotificationSubscription.AppInstanceId'
  AppTerminationNotificationSubscription.Response:
    description: This type represents the information that the mobile edge platform notifies the subscribed application instance about  the corresponding application instance termination/stop.
    type: object
    required:
      - subscriptionType
      - callbackReference
      - _links
      - appInstanceId
    properties:
      subscriptionType:
        $ref: '#/definitions/AppTerminationNotificationSubscription.SubscriptionType'
      callbackReference:
        $ref: '#/definitions/AppTerminationNotificationSubscription.CallbackReference'
      _links:
        $ref: '#/definitions/Self'
      appInstanceId:
        $ref: '#/definitions/AppTerminationNotificationSubscription.AppInstanceId'
  AppTerminationNotificationSubscription.SubscriptionType:
    description: Shall be set to AppTerminationNotificationSubscription.
    type: string
    example: AppTerminationNotificationSubscription
  CategoryRef.Href:
    description: Reference of the catalogue
    type: string
    example: catItem1
  CategoryRef.Id:
    description: Unique identifier of the category
    type: string
    example: id12345
  CategoryRef.Name:
    description: Name of the category
    type: string
    example: RNI
  CategoryRef.Version:
    description: Category version
    type: string
    example: version1
  CategoryRef:
    description: This type represents the category reference
    type: object
    required:
      - href
      - id
      - name
      - version
    properties:
      href:
        $ref: '#/definitions/CategoryRef.Href'
      id:
        $ref: '#/definitions/CategoryRef.Id'
      name:
        $ref: '#/definitions/CategoryRef.Name'
      version:
        $ref: '#/definitions/CategoryRef.Version'
  CurrentTime:
    description: This type represents the information provided by the mobile edge platform in response to the Get Platform Time Request message.
    type: object
    required:
      - nanoSeconds
      - seconds
      - timeSourceStatus
    properties:
      seconds:
        type: integer
        format: uint32
        description: 'The seconds part of the time. Time is defined as Unix-time since January 1, 1970, 00:00:00 UTC'
        example: 1577836800
      nanoSeconds:
        type: integer
        format: uint32
        description: 'The nanoseconds part of the time. Time is defined as Unix-time since January 1, 1970, 00:00:00 UTC'
        example: 0
      timeSourceStatus:
        type: string
        enum:
          - TRACEABLE
          - NONTRACEABLE
        description: Platform Time Source status. 1 = TRACEABLE - time source is locked to the UTC time source. 2 = NONTRACEABLE - time source is not locked to the UTC time source
        example: TRACEABLE
  DestinationInterface.InterfaceType:
    description: Type of the interface
    type: string
    enum:
      - TUNNEL
      - MAC
      - IP
    example: TUNNEL
  DestinationInterface.IpAddress:
    description: IP address of the remote destination
    type: string
    example: 192.0.2.0
  DestinationInterface.MacAddress:
    description: Source address identifies the MAC address of the interface
    type: string
    example: 02-00-00-00-00-00
  DestinationInterface:
    description: This type represents the destination interface.
    type: object
    required:
      - interfaceType
    properties:
      interfaceType:
        $ref: '#/definitions/DestinationInterface.InterfaceType'
      tunnelInfo:
        $ref: '#/definitions/TunnelInfo'
      srcMacAddress:
        $ref: '#/definitions/DestinationInterface.MacAddress'
      dstMacAddress:
        $ref: '#/definitions/DestinationInterface.MacAddress'
      dstIpAddress:
        $ref: '#/definitions/DestinationInterface.IpAddress'
  DnsRule.DomainName:
    description: FQDN resolved by the DNS rule
    type: string
    example: www.example.com
  DnsRule.Id:
    description: Identifies the DNS Rule
    type: string
    example: dnsRule1
  DnsRule.IpAddress:
    description: IP address associated with the FQDN resolved by the DNS rule
    type: string
    example: 192.0.2.0
  DnsRule.IpAddressType:
    description: IP address type
    type: string
    enum:
      - IP_V6
      - IP_V4
    example: IP_V6
  DnsRule.State:
    description: DNS rule state
    type: string
    enum:
      - ACTIVE
      - INACTIVE
    example: ACTIVE
  DnsRule.Ttl:
    description: Time to live value
    type: integer
    format: uint32
    example: '?'
  DnsRule:
    description: This type represents the general information of a DNS rule.
    type: object
    required:
      - dnsRuleId
      - domainName
      - ipAddressType
      - ipAddress
      - state
    properties:
      dnsRuleId:
        $ref: '#/definitions/DnsRule.Id'
      domainName:
        $ref: '#/definitions/DnsRule.DomainName'
      ipAddressType:
        $ref: '#/definitions/DnsRule.IpAddressType'
      ipAddress:
        $ref: '#/definitions/DnsRule.IpAddress'
      ttl:
        $ref: '#/definitions/DnsRule.Ttl'
      state:
        $ref: '#/definitions/DnsRule.State'
  EndPointInfo.Address.Host:
    description: Host portion of the address
    type: string
    example: 192.0.2.0
  EndPointInfo.Address.Port:
    description: Port portion of the address
    type: integer
    format: uint32
    example: '8080'
  EndPointInfo.Address:
    description: A IP address and port pair
    type: object
    properties:
      host:
        $ref: '#/definitions/EndPointInfo.Address.Host'
      port:
        $ref: '#/definitions/EndPointInfo.Address.Port'
  EndPointInfo.Addresses:
    description: Entry point information of the service as one or more pairs of IP address and port
    type: array
    items:
      $ref: '#/definitions/EndPointInfo.Address'
  EndPointInfo.Alternative:
    description: 'Entry point information of the service in a format defined by an implementation, or in an external specification.'
    type: object
  EndPointInfo.Uri:
    description: Entry point information of the service
    type: string
    format: uri
    example: /meMp1/service/EntryPoint
  EndPointInfo.Uris:
    description: 'Entry point information of the service as string, formatted according to URI syntax'
    type: array
    items:
      $ref: '#/definitions/EndPointInfo.Uri'
  EndPointInfo:
    description: This type represents information about a transport endpoint
    type: object
    properties:
      uris:
        $ref: '#/definitions/EndPointInfo.Uris'
      addresses:
        $ref: '#/definitions/EndPointInfo.Addresses'
      alternative:
        $ref: '#/definitions/EndPointInfo.Alternative'
  LinkType:
    description: URI referring to a resource
    type: string
    format: uri
    example: /meMp1/example
  Mp1SubscriptionLinkList.Links:
    description: Self-referring URI.
    type: object
    required:
      - self
    properties:
      self:
        $ref: '#/definitions/LinkType'
      subscription:
        description: Subscription list
        type: array
        items:
          $ref: '#/definitions/Mp1SubscriptionLinkList.Subscription'
  Mp1SubscriptionLinkList.Subscription:
    description: A link to a subscription.
    type: object
    required:
      - href
      - rel
    properties:
      href:
        description: The URI referring to the subscription
        type: string
        format: uri
      rel:
        description: The values are as defined in the ÔÇ£subscriptionTypeÔÇØ attribute for each different Mp1 event subscription data type.
        type: string
  Mp1SubscriptionLinkList:
    description: This type represents a list of links related to currently existing subscriptions for a mobile edge application instance. This information is returned when sending a request to receive current subscriptions.
    type: object
    required:
      - _links
    properties:
      _links:
        $ref: '#/definitions/Mp1SubscriptionLinkList.Links'
  SecurityInfo.OAuth2Info.GrantTypes:
    description: List of supported OAuth 2.0 grant types
    type: string
    enum:
      - OAUTH2_AUTHORIZATION_CODE
      - OAUTH2_IMPLICIT_GRANT
      - OAUTH2_RESOURCE_OWNER
      - OAUTH2_CLIENT_CREDENTIALS
    example: OAUTH2_CLIENT_CREDENTIALS
  SecurityInfo.OAuth2Info.TokenEndpoint:
    description: The token endpoint
    type: string
    format: uri
    example: /meMp1/mp1.security/TokenEndPoint
  SecurityInfo.OAuth2Info:
    description: Parameters related to use of OAuth 2.0
    required:
      - grantTypes
      - tokenEndpoint
    properties:
      grantTypes:
        $ref: '#/definitions/SecurityInfo.OAuth2Info.GrantTypes'
      tokenEndpoint:
        $ref: '#/definitions/SecurityInfo.OAuth2Info.TokenEndpoint'
  SecurityInfo:
    description: This type represents security information related to a transport
    type: object
    required:
      - oAuth2Info
    properties:
      oAuth2Info:
        $ref: '#/definitions/SecurityInfo.OAuth2Info'
  Self:
    description: Self-referring URI.
    type: object
    required:
      - self
    properties:
      self:
        $ref: '#/definitions/LinkType'
  SerAvailabilityNotificationSubscription.CallbackReference:
    description: URI selected by the mobile edge application instance to receive notifications on the subscribed mobile edge service availability information. This shall be included in both the request and the response.
    type: string
    format: uri
  SerAvailabilityNotificationSubscription.Request:
    description: This type represents a subscription to the notifications from the mobile edge platform regarding the availability of a mobile edge service or a list of mobile edge services.
    type: object
    required:
      - subscriptionType
      - callbackReference
      - filteringCriteria
    properties:
      subscriptionType:
        $ref: '#/definitions/SerAvailabilityNotificationSubscription.SubscriptionType'
      callbackReference:
        $ref: '#/definitions/SerAvailabilityNotificationSubscription.CallbackReference'
      filteringCriteria:
        $ref: '#/definitions/ServiceInfo'
  SerAvailabilityNotificationSubscription.Response:
    description: This type represents a subscription to the notifications from the mobile edge platform regarding the availability of a mobile edge service or a list of mobile edge services.
    type: object
    required:
      - subscriptionType
      - callbackReference
      - _links
      - filteringCriteria
    properties:
      subscriptionType:
        $ref: '#/definitions/SerAvailabilityNotificationSubscription.SubscriptionType'
      callbackReference:
        $ref: '#/definitions/SerAvailabilityNotificationSubscription.CallbackReference'
      _links:
        $ref: '#/definitions/Self'
      filteringCriteria:
        $ref: '#/definitions/ServiceInfo'
  SerAvailabilityNotificationSubscription.SubscriptionType:
    description: Shall be set to SerAvailabilityNotificationSubscription.
    type: string
    example: SerAvailabilityNotificationSubscription
  SerializerTypes:
    description: The enumeration SerializerTypes represents types of serializers
    type: string
    enum:
      - JSON
      - XML
      - PROTOBUF3
    example: JSON
  ServiceInfo.SerInstanceId:
    description: Identifier of the service instance assigned by the MEPM / mobile edge platform.
    type: string
    example: ServiceInstance123
  ServiceInfo.SerName:
    description: The name of the service. This is how the service producing mobile edge application identifies the service instance it produces.
    type: string
    example: ExampleService
  ServiceInfo.State:
    description: Contains the state
    type: string
    enum:
      - ACTIVE
      - INACTIVE
    example: ACTIVE
  ServiceInfo.TransportId:
    description: 'Identifier of the platform-provided transport to be used by the service. Valid identifiers may be obtained using the ÔÇ£Transport information queryÔÇØ procedure. May be present in POST requests to signal the use of a platform-provided transport for the service, and shall be absent otherwise.'
    type: string
    example: Rest1
  ServiceInfo.Version:
    description: Service version
    type: string
    example: ServiceVersion1
  ServiceInfo:
    description: This type represents the general information of a mobile edge service.
    type: object
    required:
      - serName
      - version
      - state
      - serializer
    properties:
      serInstanceId:
        $ref: '#/definitions/ServiceInfo.SerInstanceId'
      serName:
        $ref: '#/definitions/ServiceInfo.SerName'
      serCategory:
        $ref: '#/definitions/CategoryRef'
      version:
        $ref: '#/definitions/ServiceInfo.Version'
      state:
        $ref: '#/definitions/ServiceInfo.State'
      transportId:
        $ref: '#/definitions/ServiceInfo.TransportId'
      transportInfo:
        $ref: '#/definitions/TransportInfo'
      serializer:
        $ref: '#/definitions/SerializerTypes'
  Subscription:
    description: A link to the related subscription
    type: object
    required:
      - subscription
    properties:
      subscription:
        $ref: '#/definitions/LinkType'
  TimingCaps.NtpServers.AuthenticationKeyNum:
    description: Authentication key number
    type: integer
    format: uint32
    example: 1
  TimingCaps.NtpServers.AuthenticationOption:
    description: NTP authentication option
    type: string
    enum:
      - NONE
      - SYMMETRIC_KEY
      - AUTO_KEY
    example: NONE
  TimingCaps.NtpServers.DelayReqMaxRate:
    description: Acceptable maximum rate of the Delay_Req messages in packets per second
    type: integer
    format: uint32
    example: 10
  TimingCaps.NtpServers.LocalPriority:
    description: NTP server local priority
    type: integer
    format: uint32
    example: 1
  TimingCaps.NtpServers.MaxPollingInterval:
    description: 'Maximum poll interval for NTP messages, in seconds as a power of two. Range 3ÔÇª17'
    type: integer
    format: uint32
    example: 17
  TimingCaps.NtpServers.MinPollingInterval:
    description: 'Minimum poll interval for NTP messages, in seconds as a power of two. Range 3ÔÇª17'
    type: integer
    format: uint32
    example: 3
  TimingCaps.NtpServers.NtpServerAddr:
    description: NTP server address
    type: string
    example: 192.0.2.0
  TimingCaps.NtpServers.NtpServerAddrType:
    description: Address type of NTP server
    type: string
    enum:
      - IP_ADDRESS
      - DNS_NAME
    example: IP_ADDRESS
  TimingCaps.NtpServers.PtpMasterIpAddress:
    description: PTP Master IP Address
    type: string
    example: 192.0.2.0
  TimingCaps.NtpServers.PtpMasterLocalPriority:
    description: PTP Master local priority
    type: integer
    format: uint32
    example: 1
  TimingCaps.NtpServers:
    description: NTP server detail.
    type: object
    required:
      - ntpServerAddrType
      - ntpServerAddr
      - minPollingInterval
      - maxPollingInterval
      - localPriority
      - authenticationOption
      - authenticationKeyNum
    properties:
      ntpServerAddrType:
        $ref: '#/definitions/TimingCaps.NtpServers.NtpServerAddrType'
      ntpServerAddr:
        $ref: '#/definitions/TimingCaps.NtpServers.NtpServerAddr'
      minPollingInterval:
        $ref: '#/definitions/TimingCaps.NtpServers.MinPollingInterval'
      maxPollingInterval:
        $ref: '#/definitions/TimingCaps.NtpServers.MaxPollingInterval'
      localPriority:
        $ref: '#/definitions/TimingCaps.NtpServers.LocalPriority'
      authenticationOption:
        $ref: '#/definitions/TimingCaps.NtpServers.AuthenticationOption'
      authenticationKeyNum:
        $ref: '#/definitions/TimingCaps.NtpServers.AuthenticationKeyNum'
  TimingCaps.PtpMasters:
    description: NTP server detail.
    type: object
    required:
      - ptpMasterIpAddress
      - ptpMasterLocalPriority
      - delayReqMaxRate
    properties:
      ptpMasterIpAddress:
        $ref: '#/definitions/TimingCaps.NtpServers.PtpMasterIpAddress'
      ptpMasterLocalPriority:
        $ref: '#/definitions/TimingCaps.NtpServers.PtpMasterLocalPriority'
      delayReqMaxRate:
        $ref: '#/definitions/TimingCaps.NtpServers.DelayReqMaxRate'
  TimingCaps.TimeStamp:
    description: time
    type: object
    required:
      - nanoSeconds
      - seconds
    properties:
      seconds:
        type: integer
        format: uint32
        description: 'The seconds part of the time. Time is defined as Unix-time since January 1, 1970, 00:00:00 UTC'
        example: 1577836800
      nanoSeconds:
        type: integer
        format: uint32
        description: 'The nanoseconds part of the time. Time is defined as Unix-time since January 1, 1970, 00:00:00 UTC'
        example: 0
  TimingCaps:
    description: This type represents the information provided by the mobile edge platform in response to the Timing capabilities Query message.
    type: object
    properties:
      timeStamp:
        $ref: '#/definitions/TimingCaps.TimeStamp'
      ntpServers:
        description: Available NTP servers
        type: array
        items:
          $ref: '#/definitions/TimingCaps.NtpServers'
      ptpMasters:
        description: Available PTP Masters
        type: array
        items:
          $ref: '#/definitions/TimingCaps.PtpMasters'
  TrafficFilter.Address:
    description: Identify the traffic rule.
    type: string
    example: TrafficRule1
  TrafficFilter.DSCP:
    description: Used to match all IPv4 packets that have the same Differentiated Services Code Point (DSCP)
    type: integer
    format: uint32
    example: 0
  TrafficFilter.Port:
    description: A port
    type: string
    example: '8080'
  TrafficFilter.Protocol:
    description: Protocol of the traffic filter
    type: string
    example: '?'
  TrafficFilter.QCI:
    description: Used to match all packets that have the same Quality Class Indicator (QCI).
    type: integer
    format: uint32
    example: 1
  TrafficFilter.TC:
    description: Used to match all IPv6 packets that have the same Traffic Class.
    type: integer
    format: uint32
    example: 1
  TrafficFilter.Token:
    description: Used for token based traffic rule
    type: string
    example: '?'
  TrafficFilter.TunnelAddress:
    description: Used for GTP tunnel based traffic rule
    type: string
    example: '?'
  TrafficFilter.TunnelPort:
    description: Used for GTP tunnel based traffic rule
    type: string
    example: '?'
  TrafficFilter:
    description: This type represents the traffic filter.
    type: object
    properties:
      srcAddress:
        description: 'An IP address or a range of IP address. For IPv4, the IP address could be an IP address plus mask, or an individual IP address, or a range of IP addresses. For IPv6, the IP address could be an IP prefix, or a range of IP prefixes.'
        type: array
        items:
          $ref: '#/definitions/TrafficFilter.Address'
      dstAddress:
        description: 'An IP address or a range of IP address. For IPv4, the IP address could be an IP address plus mask, or an individual IP address, or a range of IP addresses. For IPv6, the IP address could be an IP prefix, or a range of IP prefixes.'
        type: array
        items:
          $ref: '#/definitions/TrafficFilter.Address'
      srcPort:
        description: A port or a range of ports
        type: array
        items:
          $ref: '#/definitions/TrafficFilter.Port'
      dstPort:
        description: A port or a range of ports
        type: array
        items:
          $ref: '#/definitions/TrafficFilter.Port'
      protocol:
        description: Specify the protocol of the traffic filter
        type: array
        items:
          $ref: '#/definitions/TrafficFilter.Protocol'
      token:
        description: Used for token based traffic rule
        type: array
        items:
          $ref: '#/definitions/TrafficFilter.Token'
      srcTunnelAddress:
        description: Used for GTP tunnel based traffic rule
        type: array
        items:
          $ref: '#/definitions/TrafficFilter.TunnelAddress'
      tgtTunnelAddress:
        description: Used for GTP tunnel based traffic rule
        type: array
        items:
          $ref: '#/definitions/TrafficFilter.TunnelAddress'
      srcTunnelPort:
        description: Used for GTP tunnel based traffic rule
        type: array
        items:
          $ref: '#/definitions/TrafficFilter.TunnelPort'
      dstTunnelPort:
        description: Used for GTP tunnel based traffic rule
        type: array
        items:
          $ref: '#/definitions/TrafficFilter.TunnelPort'
      qCI:
        $ref: '#/definitions/TrafficFilter.QCI'
      dSCP:
        $ref: '#/definitions/TrafficFilter.DSCP'
      tC:
        $ref: '#/definitions/TrafficFilter.TC'
  TrafficRule.Action:
    description: The action of the ME host data plane when a packet matches the trafficFilter
    type: string
    enum:
      - DROP
      - FORWARD_DECAPSULATED
      - FORWARD_AS_IS
      - PASSTHROUGH
      - DUPLICATE_DECAPSULATED
      - DUPLICATE_AS_IS
    example: DROP
  TrafficRule.FilterType:
    description: Definition of filter per FLOW or PACKET. If flow the filter match UE->EPC packet and the reverse packet is handled in the same context
    type: string
    enum:
      - FLOW
      - PACKET
    example: FLOW
  TrafficRule.Id:
    description: Identify the traffic rule.
    type: string
    example: TrafficRule1
  TrafficRule.Priority:
    description: 'Priority of this traffic rule. If traffic rule conflicts, the one with higher priority take precedence'
    type: integer
    format: uint32
    example: 1
  TrafficRule.State:
    description: Contains the traffic rule state
    type: string
    enum:
      - ACTIVE
      - INACTIVE
    example: ACTIVE
  TrafficRule:
    description: This type represents the general information of a traffic rule.
    type: object
    required:
      - trafficRuleId
      - filterType
      - priority
      - trafficFilter
      - action
      - state
    properties:
      trafficRuleId:
        $ref: '#/definitions/TrafficRule.Id'
      filterType:
        $ref: '#/definitions/TrafficRule.FilterType'
      priority:
        $ref: '#/definitions/TrafficRule.Priority'
      trafficFilter:
        $ref: '#/definitions/TrafficFilter'
      action:
        $ref: '#/definitions/TrafficRule.Action'
      dstInterface:
        $ref: '#/definitions/DestinationInterface'
      state:
        $ref: '#/definitions/TrafficRule.State'
  TransportInfo.Description:
    description: Human-readable description of this transport
    type: string
    example: REST API
  TransportInfo.Id:
    description: The identifier of this transport
    type: string
    example: TransId12345
  TransportInfo.ImplSpecificInfo:
    description: Additional implementation specific details of the transport
    type: object
  TransportInfo.Name:
    description: The name of this transport
    type: string
    example: REST
  TransportInfo.Protocol:
    description: The name of the protocol used. Shall be set to HTTP for a REST API.
    type: string
    example: HTTP
  TransportInfo.Version:
    description: The version of the protocol used
    type: string
    example: '2.0'
  TransportInfo:
    description: This type represents the general information of a mobile edge service.
    type: object
    required:
      - id
      - name
      - type
      - protocol
      - version
      - endpoint
      - mp1.security
    properties:
      id:
        $ref: '#/definitions/TransportInfo.Id'
      name:
        $ref: '#/definitions/TransportInfo.Name'
      description:
        $ref: '#/definitions/TransportInfo.Description'
      type:
        $ref: '#/definitions/TransportTypes'
      protocol:
        $ref: '#/definitions/TransportInfo.Protocol'
      version:
        $ref: '#/definitions/TransportInfo.Version'
      endpoint:
        $ref: '#/definitions/EndPointInfo'
      mp1.security:
        $ref: '#/definitions/SecurityInfo'
      implSpecificInfo:
        $ref: '#/definitions/TransportInfo.ImplSpecificInfo'
  TransportTypes:
    description: The enumeration TransportTypes represents types of transports
    type: string
    enum:
      - REST_HTTP
      - MB_TOPIC_BASED
      - MB_ROUTING
      - MB_PUBSUB
      - RPC
      - RPC_STREAMING
      - WEBSOCKET
    example: JSON
  TunnelInfo.TunnelDstAddress:
    description: Destination address of the tunnel
    type: string
    example: '?'
  TunnelInfo.TunnelSrcAddress:
    description: Source address of the tunnel
    type: string
    example: '?'
  TunnelInfo.TunnelType:
    description: This type represents the tunnel information.
    type: string
    enum:
      - GTP_U
      - GRE
    example: GTP_U
  TunnelInfo:
    description: This type represents the tunnel information.
    type: object
    required:
      - tunnelType
    properties:
      tunnelType:
        $ref: '#/definitions/TunnelInfo.TunnelType'
      tunnelDstAddress:
        $ref: '#/definitions/TunnelInfo.TunnelDstAddress'
      tunnelSrcAddress:
        $ref: '#/definitions/TunnelInfo.TunnelSrcAddress'
